package net.nitroservices.rezan.mlforandroidmalwaredetection;

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.example.android.appusagestatistics.AppUsageStatisticsActivity;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by rezan on 8/2/2016.
 */
public class InstalledAppsStatsActivity extends ListActivity {

    private PackageManager packageManager = null;
    private List<ApplicationInfo> appsList = null;
    private AppAdapter listAdapter = null;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_installed_apps_stats);


        packageManager = getPackageManager();

        new LoadApplications().execute();
    }

    @Override
    protected void onListItemClick(ListView listView, View view, int position, long id) {
        super.onListItemClick(listView, view, position, id);

        ApplicationInfo applicationInfo = appsList.get(position);

        try
        {
            Intent intent = packageManager.getLaunchIntentForPackage(applicationInfo.packageName);

            if (intent != null)
                startActivity(intent);
        }
        catch (ActivityNotFoundException ex)
        {
            Toast.makeText(InstalledAppsStatsActivity.this, ex.getMessage(), Toast.LENGTH_LONG).show();
        }
        catch (Exception ex)
        {
            Toast.makeText(InstalledAppsStatsActivity.this, ex.getMessage(), Toast.LENGTH_LONG).show();
        }

    }

    private List<ApplicationInfo> checkForLaunchIntent(List<ApplicationInfo> list)
    {
        ArrayList<ApplicationInfo> appList = new ArrayList<ApplicationInfo>();

        for (ApplicationInfo app : list)
        {
            try
            {
                if (null != packageManager.getLaunchIntentForPackage(app.packageName))
                {
                    appList.add(app);
                }
            }
            catch (Exception ex)
            {
                ex.printStackTrace();
            }
        }

        return appList;
    }


    private class LoadApplications extends AsyncTask<Void, Void, Void>
    {
        private ProgressDialog progress = null;

        @Override
        protected Void doInBackground(Void... params) {
            appsList = checkForLaunchIntent(packageManager.getInstalledApplications(PackageManager.GET_META_DATA));
            listAdapter = new AppAdapter(InstalledAppsStatsActivity.this, R.layout.snippet_list_row, appsList);

            return null;
        }

        @Override
        protected void onCancelled() {
            super.onCancelled();
        }

        @Override
        protected void onPostExecute(Void result) {
            setListAdapter(listAdapter);
            progress.dismiss();
            super.onPostExecute(result);
        }

        @Override
        protected void onPreExecute() {
            progress = ProgressDialog.show(InstalledAppsStatsActivity.this, null, "Loading application info...");
            super.onPreExecute();
        }

        @Override
        protected void onProgressUpdate(Void... values) {
            super.onProgressUpdate(values);
        }
    }


}
