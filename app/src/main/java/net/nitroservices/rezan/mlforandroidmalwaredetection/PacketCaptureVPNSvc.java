package net.nitroservices.rezan.mlforandroidmalwaredetection;

import android.annotation.SuppressLint;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.net.VpnService;
import android.os.Build;
import android.os.ParcelFileDescriptor;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import android.util.Log;

/**
 * Created by rezan on 11/4/16.
 */

public class PacketCaptureVPNSvc extends VpnService implements Runnable {


    private static final String TAG = "PacketCaptureVPNService";


    private Thread mThread;

    private TelephonyManager telephonyManager;
    private PhoneStateListener phoneStateListener;


    private Builder builder;

    private ParcelFileDescriptor mInterface;


    public PacketCaptureVPNSvc() {
        telephonyManager = null;
        phoneStateListener = null;

        // builder = new Builder(this);
    }



    @SuppressLint({"NewApi"})
    private void createVPNInterface() {

        builder.setSession("PacketCapture");
        builder.addAddress("10.0.8.1", 32);
        builder.addRoute("0.0.0.0", 0);
        builder.setMtu(1500);
        builder.addDnsServer("8.8.8.8");
        builder.addDnsServer("4.2.2.1");



        if (Build.VERSION.SDK_INT > 19) {
            try {
                builder.addDisallowedApplication(
                        "net.nitroservices.rezan.mlforandroidmalwaredetection");

            } catch (PackageManager.NameNotFoundException ex) {
                Log.w(TAG, "addDisallowedApplication NameNotFoundException");
            }
        }



        mInterface = builder.establish();
        if (mInterface != null) {
            PCVPNSvcCommonMethods.setBlocking(mInterface.getFileDescriptor(), true);

            getPackageManager().setComponentEnabledSetting(
                    new ComponentName(this, ConnChangeReceiver.class), 1, 1);

            PCVPNSvcCommonMethods.getActiveNetworkType((Context)this);

        }




    }


    public void run() {

        try {

            createVPNInterface();

        } catch (Exception ex) {

            Log.e(TAG, "setupVpn() has expection:");
            Log.e(TAG, Log.getStackTraceString(ex));



        }



    }



}
