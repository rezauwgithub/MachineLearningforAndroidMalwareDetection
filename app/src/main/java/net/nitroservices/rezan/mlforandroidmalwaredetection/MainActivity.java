package net.nitroservices.rezan.mlforandroidmalwaredetection;

import android.content.Intent;
import android.os.Environment;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import weka.classifiers.Evaluation;
import weka.classifiers.bayes.NaiveBayes;
import weka.core.Debug;
import weka.core.Instances;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        String fileName = "airline.arff";

        // Find the directory for the SD Card using the API
        // Don't hardcode "/sdcard"
        File sdcard = Environment.getExternalStorageDirectory();

        // Get arff file
        File file = new File(sdcard, fileName);


        BufferedReader bufferedReader = null;
        try {
            bufferedReader = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        Instances train = null;
        try {
            train = new Instances(bufferedReader);
        } catch (IOException e) {
            e.printStackTrace();
        }
        train.setClassIndex(train.numAttributes() -1);
        NaiveBayes naiveBayes = new NaiveBayes();
        try {
            naiveBayes.buildClassifier(train);
        } catch (Exception e) {
            e.printStackTrace();
        }
        Evaluation evaluation = null;
        try {
            evaluation = new Evaluation(train);
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            evaluation.crossValidateModel(naiveBayes, train, 10, new Debug.Random(1));
        } catch (Exception e) {
            e.printStackTrace();
        }

        Log.i("Test Output fMeasure: ", String.valueOf(evaluation.fMeasure(1)));
        Log.i("Test Output precision: ", String.valueOf(evaluation.precision(1)));
        Log.i("Test Output recall: ", String.valueOf(evaluation.recall(1)));


        Intent installedAppActivity = new Intent(MainActivity.this, InstalledAppsActivity.class);
        startActivity(installedAppActivity);

    }
}
